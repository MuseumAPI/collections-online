@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<CollectionsOnline.WebSite.Features.Species.SpeciesViewModel>
@{
    Layout = "layout.cshtml";
}
<div class="container no-nav">
    <div class="row">
        <div class="col-md-12">
            <div class="record panel panel-default">
                <div class="panel-heading">
                    <h1 class="panel-title">@(Model.Species.CommonNames.FirstOrDefault() ?? Model.Species.SpeciesName ?? Model.Species.Genus)</h1>
                </div>
                <div class="panel-body">
                    <div class="images">
                        @for (int i = 0; i < Model.Species.Media.Count; i++)
                        {
                            if (i == 0)
                            {
                                <img src="@Model.Species.Media[i].Url" width="350" height="350" class="img-rounded center-block" />
                            }
                            else
                            {
                                <img src="@Model.Species.Media[i].Url" width="100" height="100" class="img-thumbnail" />
                            }
                        }
                    </div>
                    <h4>@Model.Species.ScientificName</h4>
                    <div class="summary">
                        @if (!string.IsNullOrWhiteSpace(Model.Species.IdentifyingCharacters))
                        {
                            <p>@Model.Species.IdentifyingCharacters</p>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Biology))
                        {
                            <p>@Model.Species.Biology</p>
                        }
                    </div>
                    <dl class="detailed dl-horizontal">
                        <dt>Date Modified</dt>
                        <dd>@Model.Species.DateModified</dd>
                        @if (!string.IsNullOrWhiteSpace(Model.Species.HigherClassification))
                        {
                            <dt>Higher Classification</dt>
                            <dd>@Model.Species.HigherClassification</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.AnimalType))
                        {
                            <dt>Animal Type</dt>
                            <dd>@Model.Species.AnimalType</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.AnimalSubType))
                        {
                            <dt>Animal SubType</dt>
                            <dd>@Model.Species.AnimalSubType</dd>
                        }
                        @if (Model.Species.Colours.Any())
                        {
                            <dt>Colours</dt>
                            <dd>
                                @foreach (var colour in Model.Species.Colours)
                                {
                                    <span>@colour</span>
                                }
                            </dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.MaximumSize))
                        {
                            <dt>Maximum Size</dt>
                            <dd>@Model.Species.MaximumSize</dd>
                        }
                        @if (Model.Species.Habitats.Any())
                        {
                            <dt>Habitats</dt>
                            <dd>
                                @foreach (var habitat in @Model.Species.Habitats)
                                {
                                    <span>@habitat</span>
                                }
                            </dd>
                        }
                        @if (Model.Species.WhereToLook.Any())
                        {
                            <dt>Where To Look</dt>
                            <dd>
                                @foreach (var whereToLook in @Model.Species.WhereToLook)
                                {
                                    <span>@whereToLook</span>
                                }
                            </dd>
                        }
                        @if (Model.Species.WhenActive.Any())
                        {
                            <dt>When Active</dt>
                            <dd>
                                @foreach (var whenActive in @Model.Species.WhenActive)
                                {
                                    <span>@whenActive</span>
                                }
                            </dd>
                        }
                        @if (Model.Species.NationalParks.Any())
                        {
                            <dt>National Parks</dt>
                            <dd>
                                @foreach (var nationalPark in @Model.Species.NationalParks)
                                {
                                    <span>@nationalPark</span>
                                }
                            </dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Diet))
                        {
                            <dt>Diet</dt>
                            <dd>@Model.Species.Diet</dd>
                        }
                        @if (Model.Species.NationalParks.Any())
                        {
                            <dt>Diet Categories</dt>
                            <dd>
                                @foreach (var dietCategory in @Model.Species.DietCategories)
                                {
                                    <span>@dietCategory</span>
                                }
                            </dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.FastFact))
                        {
                            <dt>Fast Fact</dt>
                            <dd>@Model.Species.FastFact</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Habitat))
                        {
                            <dt>Habitat</dt>
                            <dd>@Model.Species.Habitat</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Distribution))
                        {
                            <dt>Distribution</dt>
                            <dd>@Model.Species.Distribution</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.BriefId))
                        {
                            <dt>Brief Id</dt>
                            <dd>@Model.Species.BriefId</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Hazards))
                        {
                            <dt>Hazards</dt>
                            <dd>@Model.Species.Hazards</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Endemicity))
                        {
                            <dt>Endemicity</dt>
                            <dd>@Model.Species.Endemicity</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Commercial))
                        {
                            <dt>Commercial</dt>
                            <dd>@Model.Species.Commercial</dd>
                        }
                        @if (Model.Species.ConservationStatuses.Any())
                        {
                            <dt>ConservationStatuses</dt>
                            <dd>
                                @foreach (var conservationStatus in @Model.Species.ConservationStatuses)
                                {
                                    <span>@conservationStatus</span>
                                }
                            </dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.ScientificDiagnosis))
                        {
                            <dt>Scientific Diagnosis</dt>
                            <dd>@Model.Species.ScientificDiagnosis</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Web))
                        {
                            <dt>Web</dt>
                            <dd>@Model.Species.Web</dd>
                        }
                        @if (Model.Species.Plants.Any())
                        {
                            <dt>Plants</dt>
                            <dd>
                                @foreach (var plant in @Model.Species.Plants)
                                {
                                    <span>@plant</span>
                                }
                            </dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.FlightStart))
                        {
                            <dt>Flight Start</dt>
                            <dd>@Model.Species.FlightStart</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.FlightEnd))
                        {
                            <dt>Flight End</dt>
                            <dd>@Model.Species.FlightEnd</dd>
                        }
                        @if (Model.Species.Depths.Any())
                        {
                            <dt>Depths</dt>
                            <dd>
                                @foreach (var depth in @Model.Species.Depths)
                                {
                                    <span>@depth</span>
                                }
                            </dd>
                        }
                        @if (Model.Species.WaterColumnLocations.Any())
                        {
                            <dt>Water Column Locations</dt>
                            <dd>
                                @foreach (var waterColumnLocation in @Model.Species.WaterColumnLocations)
                                {
                                    <span>@waterColumnLocation</span>
                                }
                            </dd>
                        }
                        @if (Model.Species.CommonNames.Any())
                        {
                            <dt>Common Names</dt>
                            <dd>
                                @foreach (var commonName in @Model.Species.CommonNames)
                                {
                                    <span>@commonName</span>
                                }
                            </dd>
                        }
                        @if (Model.Species.OtherNames.Any())
                        {
                            <dt>Other Names</dt>
                            <dd>
                                @foreach (var otherName in @Model.Species.OtherNames)
                                {
                                    <span >@otherName</span>
                                }
                            </dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Phylum))
                        {
                            <dt>Phylum</dt>
                            <dd>@Model.Species.Phylum</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Subphylum))
                        {
                            <dt>Subphylum</dt>
                            <dd>@Model.Species.Subphylum</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Superclass))
                        {
                            <dt>Superclass</dt>
                            <dd>@Model.Species.Superclass</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Class))
                        {
                            <dt>Class</dt>
                            <dd>@Model.Species.Class</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Subclass))
                        {
                            <dt>Subclass</dt>
                            <dd>@Model.Species.Subclass</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Superorder))
                        {
                            <dt>Superorder</dt>
                            <dd>@Model.Species.Superorder</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Order))
                        {
                            <dt>Order</dt>
                            <dd>@Model.Species.Order</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Suborder))
                        {
                            <dt>Suborder</dt>
                            <dd>@Model.Species.Suborder</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Infraorder))
                        {
                            <dt>Infraorder</dt>
                            <dd>@Model.Species.Infraorder</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Superfamily))
                        {
                            <dt>Superfamily</dt>
                            <dd>@Model.Species.Superfamily</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Family))
                        {
                            <dt>Family</dt>
                            <dd>@Model.Species.Family</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Subfamily))
                        {
                            <dt>Subfamily</dt>
                            <dd>@Model.Species.Subfamily</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Genus))
                        {
                            <dt>Genus</dt>
                            <dd>@Model.Species.Genus</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Subgenus))
                        {
                            <dt>Subgenus</dt>
                            <dd>@Model.Species.Subgenus</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.SpeciesName))
                        {
                            <dt>SpeciesName</dt>
                            <dd>@Model.Species.SpeciesName</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Subspecies))
                        {
                            <dt>Subspecies</dt>
                            <dd>@Model.Species.Subspecies</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.MoV))
                        {
                            <dt>MoV</dt>
                            <dd>@Model.Species.MoV</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.Author))
                        {
                            <dt>Author</dt>
                            <dd>@Model.Species.Author</dd>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Species.ScientificName))
                        {
                            <dt>Scientific Name</dt>
                            <dd>@Model.Species.ScientificName</dd>
                        }
                        @if (Model.Species.SpecimenIds.Any())
                        {
                            <dt>Specimens</dt>
                            <dd>
                                @foreach (var specimenId in @Model.Species.SpecimenIds)
                                {
                                    <a href="/@specimenId">@specimenId</a>
                                }
                            </dd>
                        }
                        @if (Model.Species.Authors.Any())
                        {
                            <dt>Authors</dt>
                            <dd>
                                @foreach (var author in @Model.Species.Authors)
                                {
                                    <div>
                                        <span>@author.Name</span>
                                        <span>@author.Biography</span>
                                    </div>
                                }
                            </dd>
                        }
                    </dl>
                </div>
            </div>
        </div>
    </div>
</div>