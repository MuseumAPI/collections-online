@using CollectionsOnline.WebSite.Extensions
@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<CollectionsOnline.WebSite.Features.Species.SpeciesViewTransformerResult>
@{
    Layout = "layout.cshtml";
}
@Html.Partial("searchbar")
@if (Model.SpeciesHeroImage != null)
{
    <figure id="media">
        <img src="@Model.SpeciesHeroImage.Large.Uri" alt="@Model.SpeciesHeroImage.AlternativeText" />
        <figcaption>
            <div class="wrapper">
                <div class="caption">
                    @if (!string.IsNullOrWhiteSpace(Model.SpeciesHeroImage.Caption))
                    {
                        <strong>@Html.Raw(Model.SpeciesHeroImage.Caption)</strong>
                    }
                </div>
                <div class="media-tools">
                    <button class="icon">
                        <span class="icon-download" aria-hidden="true"></span>
                        <span class="icon-label-hidden">Download Media</span>
                    </button>
                    <button class="icon">
                        <span class="icon-fullscreen" aria-hidden="true"></span>
                        <span class="icon-label-hidden">View full screen</span>
                    </button>
                </div>
            </div>
        </figcaption>
    </figure>
}

<div id="title">
    <div class="wrapper">
        <h1>
            @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.TaxonName))
            {
                <em>@Model.Species.Taxonomy.TaxonName</em><br/>
            }
            @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.CommonName))
            {
                @Model.Species.Taxonomy.CommonName
            }
        </h1>
        @if (Model.SpeciesImages.Any())
        {
            <div class="thumbnails">
                @foreach (var speciesImage in Model.SpeciesImages)
                {
                    <div class="thumbnail">
                        @if (speciesImage.Thumbnail.Uri == Model.SpeciesHeroImage.Thumbnail.Uri)
                        {
                            <img class="active" src="@speciesImage.Thumbnail.Uri" alt="@speciesImage.AlternativeText" />
                        }
                        else
                        {
                            <img src="@speciesImage.Thumbnail.Uri" alt="@speciesImage.AlternativeText" />
                        }
                    </div>
                }
            </div>
        }        
    </div>
</div>

<div id="record">
    <div class="wrapper">
        <section class="text-content">
            <div class="summary">
                @if (!string.IsNullOrWhiteSpace(Model.Species.GeneralDescription))
                {
                    <h3>General Description</h3>
                    <p>@Html.Raw(Model.Species.GeneralDescription)</p>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Species.Biology))
                {
                    <h3>Biology</h3>
                    <p>@Html.Raw(Model.Species.Biology)</p>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Species.Distribution))
                {
                    <h3>Distribution</h3>
                    <p>@Html.Raw(Model.Species.Distribution)</p>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Species.Habitat))
                {
                    <h3>Habitat</h3>
                    <p>@Html.Raw(Model.Species.Habitat)</p>
                }
            </div>
            <div class="detail">
                <ul>
                    @if (!string.IsNullOrWhiteSpace(Model.Species.AnimalType))
                    {
                        <li>
                            <h3>Animal Type</h3>
                            <p><a href="/search?speciestype=@HttpUtility.UrlEncode(Model.Species.AnimalType.ToLower())">@Model.Species.AnimalType</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.AnimalSubType))
                    {
                        <li>
                            <h3>Animal SubType</h3>
                            <p><a href="/search?keyword=@HttpUtility.UrlEncode(Model.Species.AnimalSubType)">@Model.Species.AnimalSubType</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.FastFact))
                    {
                        <li>
                            <h3>Fast Fact</h3>
                            <p>@Html.Raw(Model.Species.FastFact)</p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.BriefId))
                    {
                        <li>
                            <h3>Brief Id</h3>
                            <p>@Html.Raw(Model.Species.BriefId)</p>
                        </li>
                    }
                    @if (Model.Species.Colours.Any())
                    {
                        <li>
                            <h3>Colours</h3>
                            <p>
                                @for (int i = 0; i < Model.Species.Colours.Count; i++)
                                {
                                    <span>@Model.Species.Colours[i]</span>@(i != Model.Species.Colours.Count - 1 ? ", " : "")
                                }
                            </p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.MaximumSize))
                    {
                        <li>
                            <h3>Maximum Size</h3>
                            <p>@Model.Species.MaximumSize</p>
                        </li>
                    }
                    @if (Model.Species.Habitats.Any())
                    {
                        <li>
                            <h3>Habitats</h3>
                            <p>
                                @for (int i = 0; i < Model.Species.Habitats.Count; i++)
                                {
                                    <a href="/search?habitat=@HttpUtility.UrlEncode(Model.Species.Habitats[i])">@Model.Species.Habitats[i]</a>@(i != Model.Species.Habitats.Count - 1 ? ", " : "")
                                }
                            </p>
                        </li>
                    }
                    @if (Model.Species.WhereToLook.Any())
                    {
                        <li>
                            <h3>Where To Look</h3>
                            <p>
                                @for (int i = 0; i < Model.Species.WhereToLook.Count; i++)
                                {
                                    <a href="/search?habitat=@HttpUtility.UrlEncode(Model.Species.WhereToLook[i])">@Model.Species.WhereToLook[i]</a>@(i != Model.Species.WhereToLook.Count - 1 ? ", " : "")
                                }
                            </p>
                        </li>
                    }
                    @if (Model.Species.WhenActive.Any())
                    {
                        <li>
                            <h3>When Active</h3>
                            <p>
                                @for (int i = 0; i < Model.Species.WhenActive.Count; i++)
                                {
                                    <span>@Model.Species.WhenActive[i]</span>@(i != Model.Species.WhenActive.Count - 1 ? ", " : "")
                                }
                            </p>
                        </li>
                    }
                    @if (Model.Species.NationalParks.Any())
                    {
                        <li>
                            <h3>National Parks</h3>
                            <p>
                                @for (int i = 0; i < Model.Species.NationalParks.Count; i++)
                                {
                                    <a href="/search?locality=@HttpUtility.UrlEncode(Model.Species.NationalParks[i])">@Model.Species.NationalParks[i]</a>@(i != Model.Species.NationalParks.Count - 1 ? ", " : "")
                                }
                            </p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Diet))
                    {
                        <li>
                            <h3>Diet</h3>
                            <p>@Model.Species.Diet</p>
                        </li>
                    }
                    @if (Model.Species.DietCategories.Any())
                    {
                        <li>
                            <h3>Diet Categories</h3>
                            <p>
                                @for (int i = 0; i < Model.Species.DietCategories.Count; i++)
                                {
                                    <span>@Model.Species.DietCategories[i]</span>@(i != Model.Species.DietCategories.Count - 1 ? ", " : "")
                                }
                            </p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Hazards))
                    {
                        <li>
                            <h3>Hazards</h3>
                            <p>@Html.Raw(Model.Species.Hazards)</p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Endemicity))
                    {
                        <li>
                            <h3>Endemicity</h3>
                            <p><a href="/search?speciesendemicity=@HttpUtility.UrlEncode(Model.Species.Endemicity.ToLower())">@Model.Species.Endemicity</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Commercial))
                    {
                        <li>
                            <h3>Commercial</h3>
                            <p>@Model.Species.Commercial</p>
                        </li>
                    }
                    @if (Model.Species.ConservationStatuses.Any())
                    {
                        <li>
                            <h3>Conservation Statuses</h3>
                            <p>
                                @for (int i = 0; i < Model.Species.ConservationStatuses.Count; i++)
                                {
                                    <a href="/search?keyword=@HttpUtility.UrlEncode(Model.Species.ConservationStatuses[i])">@Model.Species.ConservationStatuses[i]</a>@(i != Model.Species.ConservationStatuses.Count - 1 ? ", " : "")
                                }
                            </p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.ScientificDiagnosis))
                    {
                        <li>
                            <h3>Scientific Diagnosis</h3>
                            <p>@Model.Species.ScientificDiagnosis</p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Web))
                    {
                        <li>
                            <h3>Web</h3>
                            <p>@Model.Species.Web</p>
                        </li>
                    }
                    @if (Model.Species.Plants.Any())
                    {
                        <li>
                            <h3>Plants</h3>
                            <p>
                                @for (int i = 0; i < Model.Species.Plants.Count; i++)
                                {
                                    <span>@Model.Species.Plants[i]</span>@(i != Model.Species.Plants.Count - 1 ? ", " : "")
                                }
                            </p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.FlightStart))
                    {
                        <li>
                            <h3>Flight Start</h3>
                            <p>@Model.Species.FlightStart</p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.FlightEnd))
                    {
                        <li>
                            <h3>Flight End</h3>
                            <p>@Model.Species.FlightEnd</p>
                        </li>
                    }
                    @if (Model.Species.Depths.Any())
                    {
                        <li>
                            <h3>Depths</h3>
                            <p>
                                @for (int i = 0; i < Model.Species.Depths.Count; i++)
                                {
                                    <span>@Model.Species.Depths[i]</span>@(i != Model.Species.Depths.Count - 1 ? ", " : "")
                                }
                            </p>
                        </li>
                    }
                    @if (Model.Species.WaterColumnLocations.Any())
                    {
                        <li>
                            <h3>Water Column Locations</h3>
                            <p>
                                @for (int i = 0; i < Model.Species.WaterColumnLocations.Count; i++)
                                {
                                    <span>@Model.Species.WaterColumnLocations[i]</span>@(i != Model.Species.WaterColumnLocations.Count - 1 ? ", " : "")
                                }
                            </p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.TaxonName))
                    {
                        <li>
                            <h3>Taxon Name</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(@Model.Species.Taxonomy.TaxonName)">@Model.Species.Taxonomy.TaxonName</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Author))
                    {
                        <li>
                            <h3>Scientific Author</h3>
                            <p>@Model.Species.Taxonomy.Author</p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.CommonName))
                    {
                        <li>
                            <h3>Common Name</h3>
                            <p>@Model.Species.Taxonomy.CommonName</p>
                        </li>
                    }
                    @if (Model.Species.Taxonomy.OtherCommonNames.Any())
                    {
                        <li>
                            <h3>Other Names</h3>
                            <p>
                                @for (int i = 0; i < Model.Species.Taxonomy.OtherCommonNames.Count; i++)
                                {
                                    <span>@Model.Species.Taxonomy.OtherCommonNames[i]</span>@(i != Model.Species.Taxonomy.OtherCommonNames.Count - 1 ? ", " : "")
                                }
                            </p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Kingdom))
                    {
                        <li>
                            <h3>Kingdom</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Kingdom)">@Model.Species.Taxonomy.Kingdom</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Phylum))
                    {
                        <li>
                            <h3>Phylum</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Phylum)">@Model.Species.Taxonomy.Phylum</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Subphylum))
                    {
                        <li>
                            <h3>Subphylum</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Subphylum)">@Model.Species.Taxonomy.Subphylum</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Superclass))
                    {
                        <li>
                            <h3>Superclass</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Superclass)">@Model.Species.Taxonomy.Superclass</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Class))
                    {
                        <li>
                            <h3>Class</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Class)">@Model.Species.Taxonomy.Class</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Subclass))
                    {
                        <li>
                            <h3>Subclass</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Subclass)">@Model.Species.Taxonomy.Subclass</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Superorder))
                    {
                        <li>
                            <h3>Superorder</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Superorder)">@Model.Species.Taxonomy.Superorder</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Order))
                    {
                        <li>
                            <h3>Order</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Order)">@Model.Species.Taxonomy.Order</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Suborder))
                    {
                        <li>
                            <h3>Suborder</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Suborder)">@Model.Species.Taxonomy.Suborder</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Infraorder))
                    {
                        <li>
                            <h3>Infraorder</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Infraorder)">@Model.Species.Taxonomy.Infraorder</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Superfamily))
                    {
                        <li>
                            <h3>Superfamily</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Superfamily)">@Model.Species.Taxonomy.Superfamily</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Family))
                    {
                        <li>
                            <h3>Family</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Family)">@Model.Species.Taxonomy.Family</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Subfamily))
                    {
                        <li>
                            <h3>Subfamily</h3>
                            <p><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Subfamily)">@Model.Species.Taxonomy.Subfamily</a></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Genus))
                    {
                        <li>
                            <h3>Genus</h3>
                            <p><em><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Genus)">@Model.Species.Taxonomy.Genus</a></em></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Subgenus))
                    {
                        <li>
                            <h3>Subgenus</h3>
                            <p><em><a href="/search?taxon=@HttpUtility.UrlEncode(Model.Species.Taxonomy.Subgenus)">@Model.Species.Taxonomy.Subgenus</a></em></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Species))
                    {
                        <li>
                            <h3>Species Name</h3>
                            <p><em>@Model.Species.Taxonomy.Species</em></p>
                        </li>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Species.Taxonomy.Subspecies))
                    {
                        <li>
                            <h3>Subspecies</h3>
                            <p><em>@Model.Species.Taxonomy.Subspecies</em></p>
                        </li>
                    }
                </ul>
            </div>
        </section>
        <aside class="side-content">
            <div class="print">
                <a class="icon" href="#">
                    <span class="icon-print" aria-hidden="true"></span>
                    <span class="icon-label">Printer friendly</span>
                </a>
            </div>
            <div class="social">
                <h4>Share</h4>
                <div class="social-tools">
                    <a class="icon" href="#">
                        <span class="icon-facebook" aria-hidden="true"></span>
                        <span class="icon-label-hidden">Facebook</span>
                    </a>
                    <a class="icon" href="#">
                        <span class="icon-twitter" aria-hidden="true"></span>
                        <span class="icon-label-hidden">Twitter</span>
                    </a>
                    <a class="icon" href="#">
                        <span class="icon-pintrest" aria-hidden="true"></span>
                        <span class="icon-label-hidden">Pintrest</span>
                    </a>
                </div>
            </div>
        </aside>
        <aside class="cite-content">
            <div class="cite">
                <h3>Cite this page</h3>
                <p>@Html.RenderCitation(Model.Species)</p>
                <h4>Rights</h4>
                <p>
                    Text on this page is licensed as
                    <a class="icon" href="http://creativecommons.org/licenses/by/2.0/au/">
                        <span class="icon-cc-by" aria-hidden="true"></span>
                        <span class="icon-label-hidden">CC BY</span>
                    </a>
                </p>
                @if (Model.Species.Authors.Any())
                {
                    <h4>Authors</h4>
                    <p>
                        @foreach (var author in @Model.Species.Authors)
                        {
                            if (author.ProfileImage != null)
                            {
                                <img src="@author.ProfileImage.Thumbnail.Uri" />
                            }
                            <span>@author.FullName</span><br/>
                            @author.Biography<br/>
                        }
                    </p>
                }
            </div>
        </aside>
    </div>
</div>

@if (Model.RelatedItems.Any() || Model.RelatedSpecimens.Any() || Model.RelatedSpecimenCount > 0)
{
    <div id="related">
        <div class="wrapper">
            <div class="related-content">
                <h3>Showing related</h3>
                @foreach (var relatedItem in Model.RelatedItems)
                {
                    <div class="item">
                        <a href="/@relatedItem.Id">
                            @if (string.IsNullOrWhiteSpace(relatedItem.ThumbnailUri))
                            {
                                <span class="no-image">
                                    <span class="no-image-label">No Image</span>
                                </span>
                            }
                            else
                            {
                                <img src="@relatedItem.ThumbnailUri" />
                            }
                            <span class="title">@Html.Raw(relatedItem.Title)</span>
                        </a>
                    </div>
                }
                @foreach (var relatedSpecimen in Model.RelatedSpecimens)
                {
                    <div class="item">
                        <a href="/@relatedSpecimen.Id">
                            @if (string.IsNullOrWhiteSpace(relatedSpecimen.ThumbnailUri))
                            {
                                <span class="no-image">
                                    <span class="no-image-label">No Image</span>
                                </span>
                            }
                            else
                            {
                                <img src="@relatedSpecimen.ThumbnailUri" />
                            }
                            <span class="title">@Html.Raw(relatedSpecimen.Title)</span>
                        </a>
                    </div>
                }
            </div>
            @if (Model.RelatedSpecimenCount > 0)
            {
                <div class="related-link">
                    <a href="/search?taxon=@HttpUtility.UrlEncode(@Model.Species.Taxonomy.TaxonName)">See all the things related to this species (@Model.RelatedSpecimenCount) ... </a>
                </div>
            }
        </div>
    </div>
}