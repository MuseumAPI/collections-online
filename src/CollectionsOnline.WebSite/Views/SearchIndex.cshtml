@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<CollectionsOnline.WebSite.Models.SearchIndexViewModel>
@{
    Layout = "Layout.cshtml";
}
<div id="search">
    <aside id="search-filter" >
        <a class="button-filter">
            <span class=" icon-filter-close" aria-hidden="true">
            </span>
            Filter by
        </a>
        <div class="facets">
            @foreach (var facet in Model.Facets)
            {
                var selectedFacets = "";
                var unselectedFacets = "";
                foreach (var value in facet.Values)
                {
                    var linkClass = "";
                    if (string.Equals(value.Name, "item") || string.Equals(value.Name, "article") || string.Equals(value.Name, "species") || string.Equals(value.Name, "specimen"))
                    {
                        linkClass = value.Name;
                    }
                    if (value.Active)
                    {
                        selectedFacets += string.Format("<a href=\"{0}\" class=\"{3}\">{1} ({2})<span class=\"icon-close\" aria-hidden=\"true\"></span><span class=\"icon-label-hidden\">Remove facet</span></a>", value.Url, value.Name, value.Hits, linkClass);
                    }
                    else
                    {

                        unselectedFacets += string.Format("<a href=\"{0}\" class=\"{3}\">{1} <span class=\"badge\">({2})</span></a>", value.Url, value.Name, value.Hits, linkClass);
                    }
                }
                <div class="facetgroup">
                    <div class="facetheader">
                        <h4 class="collapsed">@facet.Name</h4>

                        @if (!string.IsNullOrEmpty(selectedFacets))
                        {
                            <div class="selected">
                                @Html.Raw(selectedFacets)
                            </div>
                        }
                    </div>
                    @if (!string.IsNullOrEmpty(unselectedFacets))
                    { 
                      <div class="facetitems">
                        @Html.Raw(unselectedFacets)
                      </div>
                    }
                </div>
            }
        </div>
    </aside>
    <div class="results">        
        @if (Model.ActiveFacets.Any() || Model.ActiveTerms.Any())
        {
            <div class="active-facets">
                @foreach (var activeFacet in Model.ActiveFacets)
                {
                    <a href="@activeFacet.UrlToRemove">
                        <span>@activeFacet.Facet :</span>
                        @activeFacet.Name
                        <span class="icon-close" aria-hidden="true"></span>
                        <span class="icon-label-hidden">Remove facet</span>
                    </a>
                }
                @foreach (var activeTerm in Model.ActiveTerms)
                {
                    <a href="@activeTerm.UrlToRemove">
                        <span>@activeTerm.Term :</span>
                        @activeTerm.Name
                        <span class="icon-close" aria-hidden="true"></span>
                        <span class="icon-label-hidden">Remove facet</span>
                    </a>
                }
            </div>
        }
        @if (Model.Suggestions.Any())
        {
            <div class="suggestions">
                <span>Did you mean?</span>
                @foreach (var suggestion in Model.Suggestions)
                {
                    <a href="@suggestion.Url">@suggestion.Suggestion</a>
                }
            </div>
        }
        <div class="pagination">
            <div class="numbers">
                <div class="counts">@Model.TotalResults.ToString("N0") results</div>
                <div class="pages">
                    <a href="@Model.PreviousPageUrl" class="button @(string.IsNullOrWhiteSpace(@Model.PreviousPageUrl) ? "disabled" : "")">
                        <span class="icon-left-arrow"></span>
                        <span class="icon-label-hidden">Previous page</span>
                    </a>
                    <input type="text" pattern="\d*" name="Page" value="@Model.Page" /> of <span class="total">@Model.TotalPages.ToString("N0")</span>
                    <a href="@Model.NextPageUrl" class="button @(string.IsNullOrWhiteSpace(@Model.NextPageUrl) ? "disabled" : "")">
                        <span class="icon-label-hidden">Next page</span>
                        <span class="icon-right-arrow"></span>
                    </a>
                </div>
                <div class="perpage">
                    Results per page
                    <a href="@Model.DefaultPerPageButton.Url" class="button first @(Model.DefaultPerPageButton.Active ? "active" : "")">@Model.DefaultPerPageButton.Name</a>
                    <a href="@Model.MaxPerPageButton.Url" class="button last @(Model.MaxPerPageButton.Active ? "active" : "")">@Model.MaxPerPageButton.Name</a>
                </div>
            </div>
            <div class="options">
                <div class="order">
                    Order by
                    <a href="@Model.RelevanceSortButton.Url" class="button first @(Model.RelevanceSortButton.Active ? "active" : "")">@Model.RelevanceSortButton.Name</a>
                    <a href="@Model.QualitySortButton.Url" class="button last @(Model.QualitySortButton.Active ? "active" : "")">@Model.QualitySortButton.Name</a>
                </div>
                <div class="viewtype">
                    <a href="@Model.GridViewButton.Url" class="button icon-grid @(Model.GridViewButton.Active ? "active" : "")"></a>
                    <a href="@Model.ListViewButton.Url" class="button icon-list @(Model.ListViewButton.Active ? "active" : "")"></a>
                </div>
            </div>
        </div>
        <div class="results-area @(Model.GridViewButton.Active ? "grid" : "list")">
            @foreach (var result in Model.Results)
            {
                @Html.Partial("emutile", result)
            }
        </div>
        <div class="pagination">
            <div class="numbers">
                <div class="counts">@Model.TotalResults.ToString("N0") results</div>
                <div class="pages">
                    <a href="@Model.PreviousPageUrl" class="button @(string.IsNullOrWhiteSpace(@Model.PreviousPageUrl) ? "disabled" : "")">
                        <span class="icon-left-arrow"></span>
                        <span class="icon-label-hidden">Previous page</span>
                    </a>
                    <input type="text" pattern="\d*" name="Page" value="@Model.Page" /> of <span class="total">@Model.TotalPages.ToString("N0")</span>
                    <a href="@Model.NextPageUrl" class="button @(string.IsNullOrWhiteSpace(@Model.NextPageUrl) ? "disabled" : "")">
                        <span class="icon-label-hidden">Next page</span>
                        <span class="icon-right-arrow"></span>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>