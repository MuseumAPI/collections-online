@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<CollectionsOnline.WebSite.Models.SearchViewModel>
@{
    Layout = "layout.cshtml";
}
<div id="search">
    <aside class="facets">
        <a href="#" class="button-filter">
            <span class="icon-filter" aria-hidden="true"></span>
            Filter by
        </a>
        @foreach (var facet in Model.Facets)
        {
            <h4>@facet.Name</h4>
            foreach (var value in facet.Values)
            {
                if (value.Active)
                {
                    <a href="@value.Url" class="active">@value.Name <span class="badge">(@value.Hits)</span></a>
                }
                else
                {
                    <a href="@value.Url">@value.Name <span class="badge">(@value.Hits)</span></a>
                }

            }
        }
    </aside>
    <div class="results">
        @Html.Partial("searchbar", Model)
        @if (Model.ActiveFacets.Any() || Model.ActiveTerms.Any())
        {
            <div class="active-facets">
                @foreach (var activeFacet in Model.ActiveFacets)
                {
                    <a href="@activeFacet.Url">
                        @activeFacet.Name
                        <span class="icon-close" aria-hidden="true"></span>
                        <span class="icon-label-hidden">Remove facet</span>
                    </a>
                }
                @foreach (var activeTerm in Model.ActiveTerms)
                {
                    <a href="@activeTerm.Url">
                        @activeTerm.Name
                        <span class="icon-close" aria-hidden="true"></span>
                        <span class="icon-label-hidden">Remove facet</span>
                    </a>
                }
            </div>
        }
        <div class="pagination">
            <div class="counts"><strong>@Model.TotalResults</strong> results in <strong>@((Model.QueryTimeElapsed+Model.FacetTimeElapsed).ToString("N0")) ms</strong>, displaying <strong>@(Model.Offset+1)</strong> to <strong>@(Model.Limit + Model.Offset)</strong></div>
            <a href="@Model.PrevPageUrl" class="button @(string.IsNullOrWhiteSpace(@Model.PrevPageUrl) ? "disabled" : "")"><span class="icon-left-arrow"></span> Previous</a>
            <a href="@Model.NextPageUrl" class="button @(string.IsNullOrWhiteSpace(@Model.NextPageUrl) ? "disabled" : "")">Next <span class="icon-right-arrow"></span></a>
        </div>
        <div class="results-area">
            @foreach (var result in Model.Results)
            {
                <div class="@result.Type.ToLower()">
                    <a href="/@result.Id">
                        @if (string.IsNullOrWhiteSpace(result.ThumbnailUri))
                        {
                            <span class="no-image">
                                <span class="no-image-label">No Image</span>
                            </span>
                        }
                        else
                        {
                            <img src="@result.ThumbnailUri" />
                        }
                        <span class="title">@Html.Raw(result.DisplayTitle)</span>
                        <span class="icon-@result.Type.ToLower()" aria-hidden="true"></span>
                    </a>
                </div>
            }
        </div>
        <div class="pagination bottom">
            <div class="counts"><strong>@Model.TotalResults</strong> results in <strong>@((Model.QueryTimeElapsed+Model.FacetTimeElapsed).ToString("N0")) ms</strong>, displaying <strong>@(Model.Offset+1)</strong> to <strong>@(Model.Limit + Model.Offset)</strong></div>
            <a href="@Model.PrevPageUrl" class="button @(string.IsNullOrWhiteSpace(@Model.PrevPageUrl) ? "disabled" : "")"><span class="icon-left-arrow"></span> Previous</a>
            <a href="@Model.NextPageUrl" class="button @(string.IsNullOrWhiteSpace(@Model.NextPageUrl) ? "disabled" : "")">Next <span class="icon-right-arrow"></span></a>
        </div>
    </div>
</div>