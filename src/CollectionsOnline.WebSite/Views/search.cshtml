@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<CollectionsOnline.WebSite.Models.SearchViewModel>
@{
    Layout = "layout.cshtml";
}
<div id="search">
    <aside class="facets">
        <a href="#" class="button-filter">
            <span class="icon-filter" aria-hidden="true"></span>
            Filter by
        </a>
        @foreach (var facet in Model.Facets)
        {
            <h4>@facet.Name</h4>
            foreach (var value in facet.Values)
            {
                if (value.Active)
                {
                    <a href="@value.Url" class="active">@value.Name <span class="badge">(@value.Hits)</span></a>
                }
                else
                {
                    <a href="@value.Url">@value.Name <span class="badge">(@value.Hits)</span></a>
                }

            }
        }
    </aside>
    <div class="results">
        @Html.Partial("searchbar", Model)
        @if (Model.ActiveFacets.Any() || Model.ActiveTerms.Any())
        {
            <div class="active-facets">
                @foreach (var activeFacet in Model.ActiveFacets)
                {
                    <a href="@activeFacet.UrlToRemove">
                        <span>@activeFacet.Facet :</span>
                        @activeFacet.Name
                        <span class="icon-close" aria-hidden="true"></span>
                        <span class="icon-label-hidden">Remove facet</span>
                    </a>
                }
                @foreach (var activeTerm in Model.ActiveTerms)
                {
                    <a href="@activeTerm.UrlToRemove">
                        <span>@activeTerm.Term :</span>
                        @activeTerm.Name
                        <span class="icon-close" aria-hidden="true"></span>
                        <span class="icon-label-hidden">Remove facet</span>
                    </a>
                }
            </div>
        }
        @if (Model.Suggestions.Any())
        {
            <div class="suggestions">
                <span>Did you mean?</span>
                @foreach (var suggestion in Model.Suggestions)
                {
                    <a href="@suggestion.Url">@suggestion.Suggestion</a>
                }
            </div>
        }
        <div class="pagination">
            <div class="numbers">
                <div class="counts">@Model.TotalResults.ToString("N0") results</div>
                <div class="pages">
                    <a href="@Model.PrevPageUrl" class="button @(string.IsNullOrWhiteSpace(@Model.PrevPageUrl) ? "disabled" : "")">
                        <span class="icon-left-arrow"></span>
                        <span class="icon-label-hidden">Previous page</span>
                    </a>
                    <input type="text" name="Page" value="@Model.Page" /> of @Model.TotalPages
                    <a href="@Model.NextPageUrl" class="button @(string.IsNullOrWhiteSpace(@Model.NextPageUrl) ? "disabled" : "")">
                        <span class="icon-label-hidden">Next page</span>
                        <span class="icon-right-arrow"></span>
                    </a>
                </div>
            </div>
            <div class="options">
                <div class="order">
                    Order by
                    <a href="@Model.RelevanceSortUrl" class="button">Relevance</a>
                    <a href="@Model.QualitySortUrl" class="button">Quality</a>
                </div>
                <div class="perpage">
                    Results per page
                    <a href="@Model.DefaultPerPageUrl" class="button">@CollectionsOnline.Core.Config.Constants.PagingPerPageDefault</a>
                    <a href="@Model.MaxPerPageUrl" class="button">@CollectionsOnline.Core.Config.Constants.PagingPerPageMax</a>
                </div>
            </div>
        </div>
        <div class="results-area">
            @foreach (var result in Model.Results)
            {
                @Html.Partial("emutile", result)
            }
        </div>
        <div class="pagination">
            <div class="numbers">
                <div class="counts">@Model.TotalResults.ToString("N0") results</div>
                <div class="pages">
                    <a href="@Model.PrevPageUrl" class="button @(string.IsNullOrWhiteSpace(@Model.PrevPageUrl) ? "disabled" : "")">
                        <span class="icon-left-arrow"></span>
                        <span class="icon-label-hidden">Previous page</span>
                    </a>
                    <input type="text" name="Page" value="@Model.Page" /> of @Model.TotalPages
                    <a href="@Model.NextPageUrl" class="button @(string.IsNullOrWhiteSpace(@Model.NextPageUrl) ? "disabled" : "")">
                        <span class="icon-label-hidden">Next page</span>
                        <span class="icon-right-arrow"></span>
                    </a>
                </div>
            </div>            
        </div>
    </div>
</div>